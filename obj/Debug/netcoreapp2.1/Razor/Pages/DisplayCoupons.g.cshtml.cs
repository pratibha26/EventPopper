#pragma checksum "C:\Users\Pratibha Jain\Desktop\IS8012_FinalProject\EventPopper\Pages\DisplayCoupons.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "593b580d26eb3261d3017d07a85266fd226cb3fa"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(EventPopper.Pages.Pages_DisplayCoupons), @"mvc.1.0.razor-page", @"/Pages/DisplayCoupons.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/DisplayCoupons.cshtml", typeof(EventPopper.Pages.Pages_DisplayCoupons), null)]
namespace EventPopper.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Pratibha Jain\Desktop\IS8012_FinalProject\EventPopper\Pages\_ViewImports.cshtml"
using EventPopper;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"593b580d26eb3261d3017d07a85266fd226cb3fa", @"/Pages/DisplayCoupons.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c199fdeb6852016284997dac23d9be406fa9dfbf", @"/Pages/_ViewImports.cshtml")]
    public class Pages_DisplayCoupons : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(33, 1111, true);
            WriteLiteral(@"
<style>
table {
    font-family: arial, sans-serif;
    border-collapse: collapse;
    width: 100%;
}
body {
    background-image: url(""https://image.shutterstock.com/z/stock-vector-bright-colorful-vector-confetti-isolated-on-white-background-549294556.jpg"");
}

td, th {
    border: 1px;
    text-align: left;
    padding: 8px;
}

tr:nth-child(even) {
    background-image: linear-gradient(to right, rgb(57,255,20,0), rgb(57,255,20,1));
    color:black;
}
tr:nth-child(odd) {
    background-image: linear-gradient(to right, rgba(0,128,255,0), rgba(0,128,255,1));;
}

.title {
    font-size: xx-large;
    text-align: left;
    margin-left: 10%;
    color: black;
    font-family: sans-serif;
}

.leftalign {
    float: left;
    margin-left: 10%;
    font-size: large;
    padding-left: 10px;
    color: black;
}
.rightalign {
    float: right;
    margin-right: 50%
    font-family: cursive;
    padding-right: 50px;
    color: black;
}
a:hover {
    background-color: yell");
            WriteLiteral("ow;\r\n}\r\n</style>\r\n\r\n<h1>Grab Coupons</h1>\r\n<br/>\r\n<table id=\"couponlist\">\r\n</table>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(1162, 1872, true);
                WriteLiteral(@"
    <script>
     var eventid;    
        // WHEN DOCUMENT READY
        $(function() {  
            var eventid = getUrlVars()[""eventid""];
            alert(""number - ""+eventid);           
            loadData(); 
        });
        function getUrlVars() {
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
                vars[key] = value;
            });
            return vars;
        }
        
        function loadData() {
            $.ajax({
                url: ""/api/coupons"",
                dataType: 'json',
                contentType: 'application/json',
                method: 'GET'
            }).done(function(responseJSON,status,xhr) {
                // process the response when status code is 200-299
                buildCouponList(responseJSON);
            }).fail(function(xhr,status,error) {
                // deal with error from server (status code 400-599)
                a");
                WriteLiteral(@"lert(""There was an error retrieving the data"");
            });
        }
        
        function buildCouponList(coupons) {
            $(""#couponlist"").empty();
            $.each(coupons, function (index, item) {
                if(item.eventId==eventid)
                {
                var row = $('<tr coupon-id=""' + item.id + '"">'+ '<td><div class=title>' + item.couponCategory + ' </div><div class=row><span class=leftalign><strong>' + item.couponName + '</strong></span><span class = rightalign>Discount -'+item.discount+'%</span></div>'+'<div class=row><span class=leftalign>Coupon Code - ' + item.couponName + '</span><span class = rightalign>Validity - '+ item.validity + '</span></div></td></tr>'); 
                $(""#couponlist"").append(row); 
                }
            });        
            }
    </script>
");
                EndContext();
            }
            );
            BeginContext(3037, 2, true);
            WriteLiteral("\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
